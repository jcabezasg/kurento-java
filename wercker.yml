# Configuration wercker.yml file to run non-UI tests, deploy artifacts to Archiva and run artifacts checker
# maven: 3.3-jdk-7 container will be used as a base "box" for the project
# We have to use internal steps in order to pass the commands required for docker run
# Archiva container will be running out of the Wercker build pipeline (for further checks once the artifacts are deployed)
# MongoDB container will be used as services during the build
# Vcheckerwercker container will be used during the last pipeline to check artifacts stored on the different repositories under scope

build:

# Specify the box to be used in this pipeline

 box:
  id: maven
  tag: 3.3-jdk-7

 steps:
    - script:
       name: Show current working folder 
       code: echo $PWD
    - script:
       name: Create OPT folder and copy xml file into that folder
       code: mkdir opt | cp kurento-settings-tfg.xml $PWD/opt
    - script:
       name: Show current folder contents (host's source code is injected to the /pipeline/source)
       code: ls -la
    - script:
       name: Show "OPT" folder contents to confirm that the xml file is in there
       code: ls opt
    - script:
       name: Check the environment variables automatically exposed to the main container 
       code: env
    - script:
       name: Check Maven version
       code: mvn --version

tests:

# Specify the box to be used in this pipeline

 box:
  id: maven
  tag: 3.3-jdk-7

# Specify the services (i.e containers) that will be linked to our box

 services:
  - mongo:latest

deploy:

 box:
  id: maven
  tag: 3.3-jdk-7

artifact-check:

 box:
  id: jcabezasg/vcheckerwercker
  tag: latest
  entrypoint: java -jar VCheckerApp-0.0.1-SNAPSHOT-jar-wercker.jar config.json 

 steps:
    - script:
       name: Show current working folder 
       code: ls -la
    - script:
        name: Test after steps
        code: apt-get install -y curl

 after-steps:
     - slack-notifier:
        url: $SLACK_URL
        channel : docker-build-tools
        username: wercker
    

